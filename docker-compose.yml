networks:
  monitor-net:
    name: monitor-net
  home-reverse-proxy-net:
    external: true
  smtp-net:
    external: true

volumes:
    prometheus_data: {}
    grafana_data: {}

name: dockprom

services:
  prometheus:
    image: prom/prometheus:v2.46.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - "--web.external-url=https://alertmanager.local"
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - home-reverse-proxy-net
      - monitor-net
      - smtp-net
    labels:
      - org.label-schema.group=monitoring
      - homepage.group=Util
      - homepage.name=Alert Manager
      # - homepage.icon=emby.png
      - homepage.href=https://alertmanager.carroll.live
      - homepage.description=Alert Manager client
      - traefik.enable=true
      - traefik.docker.network=home-reverse-proxy-net
      - traefik.http.routers.alertmanager.rule=Host(`alertmanager.carroll.live`)
      - traefik.http.routers.alertmanager.entrypoints=websecure
      - traefik.http.routers.alertmanager.tls.certresolver=carroll_live_dns_resolver
      - traefik.http.services.alertmanager.loadbalancer.server.port=9093
      - dockmasq.enabled=true
      - dockmasq.a.name=alertmanager.carroll.live

  nodeexporter:
    image: prom/node-exporter:v1.6.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - ./textfile_collector:/textfile_collector:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/textfile_collector'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:10.0.3
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
      - home-reverse-proxy-net
    labels:
      - org.label-schema.group=monitoring
      - homepage.group=Util
      - homepage.name=Grafana
      # - homepage.icon=emby.png
      - homepage.href=https://grafana.carroll.live
      - homepage.description=Grafana client
      - traefik.enable=true
      - traefik.docker.network=home-reverse-proxy-net
      - traefik.http.routers.grafana.rule=Host(`grafana.carroll.live`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls.certresolver=carroll_live_dns_resolver
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - dockmasq.enabled=true
      - dockmasq.a.name=grafana.carroll.live

  pushgateway:
    image: prom/pushgateway:v1.6.0
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    ports:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: caddy:2.6.4
    container_name: caddy
    ports:
      - "3001:3000"
      - "8081:8080"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    volumes:
      - ./caddy:/etc/caddy
    env_file:
      - .env
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-$2a$14$1l.IozJx7xQRVmlkEQ32OeEEfP5mRxTpbDTCTcXRqn19gXD8YK1pO}
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
  
  zfs-utils:
    container_name: zfs-utils
    build:
      context: ./zfs-utils
    privileged: true
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /dev:/dev:ro
      - ./textfile_collector:/zfs-metrics

  # Scheduling
  ofelia-dockprom:
    container_name: ofelia-dockprom
    image: mcuadros/ofelia:latest
    command: daemon --config=/opt/config.ini
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./ofelia/opt:/opt
    restart: unless-stopped
